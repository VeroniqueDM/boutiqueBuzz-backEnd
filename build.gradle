plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.booleanuk'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'com.github.javafaker:javafaker:1.0.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.modelmapper:modelmapper:2.4.2'

	testRuntimeOnly 'org.hsqldb:hsqldb'

	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'mysql:mysql-connector-java:8.0.26'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'com.cloudinary:cloudinary-http45:1.34.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // or jjwt-gson if Gson is preferred
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.security:spring-security-config'
}

tasks.named('test') {
	useJUnitPlatform()
}
